
Cyber Esports App Documentation
==============================

1. Application Overview
----------------------
The Cyber Esports App is a secure credential management system designed for esports players and gamers. It provides safe storage of gaming platform credentials with encryption and security best practices.

2. Key Features
--------------
- Secure user authentication with password strength validation
- Two-factor authentication (2FA)
- Encrypted storage of gaming credentials (Twitch, Discord, Steam)
- Compromised password detection
- Safe communication guidelines
- Incident response procedures

3. Security Features
-------------------
- Password requirements:
  * Minimum 8 characters
  * Must contain uppercase and lowercase letters
  * Must include numbers and special characters
  * Passwords are hashed before storage
- Symmetric encryption for gaming credentials
- Random 4-digit 2FA codes
- Real-time password strength evaluation
- Compromised password database checking

4. Application Structure
-----------------------
- User Management:
  * Account creation
  * Login with 2FA
  * Password validation
  * Session management

- Credential Management:
  * Secure storage of gaming platform credentials
  * Encryption/decryption of sensitive data
  * Platform-specific credential handling

- Security Features:
  * Safe communication practices
  * Incident response guidelines
  * Security best practices

5. Database Schema
-----------------
- Users Table:
  * username (TEXT PRIMARY KEY)
  * password_hash (TEXT)

- Gaming Credentials Table:
  * username (TEXT PRIMARY KEY)
  * twitch (TEXT, encrypted)
  * discord (TEXT, encrypted)
  * steam (TEXT, encrypted)

6. Usage Instructions
--------------------
1. Launch application
2. Create account or login
3. Complete 2FA verification
4. Store gaming credentials
5. Follow security guidelines
6. Use incident response procedures if needed

7. Security Guidelines
---------------------
- Never share passwords
- Use unique passwords for each platform
- Enable 2FA when available
- Report suspicious activity
- Keep software updated
- Follow safe communication practices

8. Technical Details
-------------------
- Built with Python/Tkinter
- Uses SQLite for data storage
- Implements Fernet symmetric encryption
- Includes SHA-256 password hashing
